{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../hexa.pipe\";\nimport * as i3 from \"../params.pipe\";\nimport * as i4 from \"../debit-mask.pipe\";\n\nconst _c0 = function () {\n  return [5, 2, 3, 4, 5];\n};\n\nexport let PipesComponent = /*#__PURE__*/(() => {\n  class PipesComponent {\n    constructor() {\n      this.fname = 'AnGuLaR TeCh';\n      this.val = 34.2356895265;\n      this.today = new Date();\n      this.user = {\n        tech: 'angular',\n        exp: 10\n      };\n    }\n\n    ngOnInit() {}\n\n  }\n\n  PipesComponent.ɵfac = function PipesComponent_Factory(t) {\n    return new (t || PipesComponent)();\n  };\n\n  PipesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PipesComponent,\n    selectors: [[\"app-pipes\"]],\n    decls: 23,\n    vars: 72,\n    template: function PipesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"pipes works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"pre\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"lowercase\");\n        i0.ɵɵpipe(5, \"uppercase\");\n        i0.ɵɵpipe(6, \"slice\");\n        i0.ɵɵpipe(7, \"percent\");\n        i0.ɵɵpipe(8, \"currency\");\n        i0.ɵɵpipe(9, \"currency\");\n        i0.ɵɵpipe(10, \"currency\");\n        i0.ɵɵpipe(11, \"currency\");\n        i0.ɵɵpipe(12, \"number\");\n        i0.ɵɵpipe(13, \"date\");\n        i0.ɵɵpipe(14, \"date\");\n        i0.ɵɵpipe(15, \"json\");\n        i0.ɵɵpipe(16, \"hexaaaaaaaaaaaaaaaa\");\n        i0.ɵɵpipe(17, \"hexaaaaaaaaaaaaaaaa\");\n        i0.ɵɵpipe(18, \"hexaaaaaaaaaaaaaaaa\");\n        i0.ɵɵpipe(19, \"hexaaaaaaaaaaaaaaaa\");\n        i0.ɵɵpipe(20, \"params\");\n        i0.ɵɵpipe(21, \"square\");\n        i0.ɵɵpipe(22, \"debitMask\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolateV([\"\\n    \", ctx.fname, \"\\n    \", i0.ɵɵpipeBind1(4, 23, ctx.fname), \"\\n    \", i0.ɵɵpipeBind1(5, 25, ctx.fname), \"\\n    \", i0.ɵɵpipeBind3(6, 27, ctx.fname, 2, 5), \"\\n\\n    \", ctx.val, \"\\n    \", i0.ɵɵpipeBind1(7, 31, ctx.val), \"\\n    \", i0.ɵɵpipeBind1(8, 33, ctx.val), \"\\n    \", i0.ɵɵpipeBind2(9, 35, ctx.val, \"INR\"), \"\\n    \", i0.ɵɵpipeBind2(10, 38, ctx.val, \"Rs. \"), \"\\n    \", i0.ɵɵpipeBind2(11, 41, ctx.val, \"INR \"), \"\\n    \", i0.ɵɵpipeBind1(12, 44, ctx.val), \"\\n    \\n    \", ctx.today, \"\\n    \", i0.ɵɵpipeBind1(13, 46, ctx.today), \"\\n    \", i0.ɵɵpipeBind2(14, 48, ctx.today, \"dd-MM-yy\"), \"\\n    \\n    \", ctx.user, \"\\n    \", i0.ɵɵpipeBind1(15, 51, ctx.user), \"\\n\\n    \", i0.ɵɵpipeBind1(16, 53, 34), \"\\n    \", i0.ɵɵpipeBind1(17, 55, 15), \"\\n    \", i0.ɵɵpipeBind1(18, 57, 255), \"\\n    \", i0.ɵɵpipeBind1(19, 59, 254), \"\\n\\n    \", i0.ɵɵpipeBindV(20, 61, i0.ɵɵpureFunction0(71, _c0)), \"\\n\\n    \", i0.ɵɵpipeBind1(21, 67, 5), \"\\n\\n    \", i0.ɵɵpipeBind1(22, 69, 1234123412345678), \"\\n\"]);\n      }\n    },\n    pipes: [i1.LowerCasePipe, i1.UpperCasePipe, i1.SlicePipe, i1.PercentPipe, i1.CurrencyPipe, i1.DecimalPipe, i1.DatePipe, i1.JsonPipe, i2.HexaPipe, i3.ParamsPipe, i3.SquarePipe, i4.DebitMaskPipe],\n    styles: [\"\"]\n  });\n  return PipesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}