{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let LifeCycleComponent = /*#__PURE__*/(() => {\n  class LifeCycleComponent {\n    constructor() {\n      this.fname = \"\";\n    }\n\n    ngOnInit() {\n      console.log('ngOnInit');\n    }\n\n    ngAfterContentInit() {\n      console.log('ngAfterContentInit');\n    }\n\n    ngAfterViewInit() {\n      console.log('ngAfterViewInit');\n    }\n\n    ngOnDestroy() {\n      console.log('ngOnDestroy');\n    } // dont use the below methods\n\n\n    ngDoCheck() {\n      console.log('ngDoCheck');\n    }\n\n    ngAfterContentChecked() {\n      console.log('ngAfterContentChecked');\n    }\n\n    ngAfterViewChecked() {\n      console.log('ngAfterViewChecked');\n    }\n\n  }\n\n  LifeCycleComponent.ɵfac = function LifeCycleComponent_Factory(t) {\n    return new (t || LifeCycleComponent)();\n  };\n\n  LifeCycleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LifeCycleComponent,\n    selectors: [[\"app-life-cycle\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"type\", \"text\", \"name\", \"fname\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function LifeCycleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"life-cycle works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LifeCycleComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.fname = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.fname);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.fname, \"\");\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"\"]\n  });\n  return LifeCycleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}