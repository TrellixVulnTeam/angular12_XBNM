{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let VariablesComponent = /*#__PURE__*/(() => {\n  class VariablesComponent {\n    constructor() {\n      this.a = 2;\n      this.b = 3;\n      this.fname = 'pj';\n      this.lname = \"pj\";\n      this.age = 34;\n      this.interest = null;\n      this.gender = true;\n      this.fruits = ['kiwi', 'melon', 'berry'];\n      this.user = {\n        tech: 'angular',\n        exp: 10\n      };\n    }\n\n    ngOnInit() {}\n\n  }\n\n  VariablesComponent.ɵfac = function VariablesComponent_Factory(t) {\n    return new (t || VariablesComponent)();\n  };\n\n  VariablesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VariablesComponent,\n    selectors: [[\"app-variables\"]],\n    decls: 9,\n    vars: 24,\n    template: function VariablesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"variables works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"pre\");\n        i0.ɵɵtext(3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"json\");\n        i0.ɵɵtext(6);\n        i0.ɵɵtext(7);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"    a :: \", ctx.a, \"\\n    b :: \", ctx.b, \"\\n\\n    \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate8(\"\\n    \", ctx.fname, \"\\n    \", ctx.age, \"\\n    \", ctx.fruits, \"\\n    \", ctx.fruits[1], \"\\n\\n    \", ctx.user, \"\\n    \", i0.ɵɵpipeBind1(5, 22, ctx.user), \"\\n    \", ctx.user.tech, \"\\n\\n\\n    ++\", ctx.gender, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\n    **\", ctx.interest, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\\n    ``\", ctx.undf, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolateV([\"\\n\\n    a+b :: \", ctx.a + ctx.b, \"\\n    a-b :: \", ctx.a - ctx.b, \"\\n    a*b :: \", ctx.a * ctx.b, \"\\n    a/b :: \", ctx.a / ctx.b, \"\\n    a%b :: \", ctx.a % ctx.b, \"\\n\\n    2+3 :: \", 2 + 3, \"\\n    2-3 :: \", 2 - 3, \"\\n    2*3 :: \", 2 * 3, \"\\n    2/3 :: \", 2 / 3, \"\\n    2%3 :: \", 2 % 3, \"\\n\"]);\n      }\n    },\n    pipes: [i1.JsonPipe],\n    styles: [\"\"]\n  });\n  return VariablesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}