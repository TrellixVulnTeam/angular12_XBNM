{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let FormsComponent = /*#__PURE__*/(() => {\n  class FormsComponent {\n    constructor() {\n      this.fname = \"\";\n      this.lname = \"\";\n      this.contact = \"\";\n      this.pwd = \"\";\n    }\n\n    ngOnInit() {}\n\n  }\n\n  FormsComponent.ɵfac = function FormsComponent_Factory(t) {\n    return new (t || FormsComponent)();\n  };\n\n  FormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormsComponent,\n    selectors: [[\"app-forms\"]],\n    decls: 23,\n    vars: 21,\n    consts: [[\"name\", \"form\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"name\", \"fname\", \"placeholder\", \"firstName\", \"required\", \"\", \"minlength\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"type\", \"text\", \"name\", \"lname\", \"placeholder\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [\"type\", \"text\", \"name\", \"contact\", \"placeholder\", \"Contact Number\", 3, \"ngModel\", \"ngModelChange\"], [\"phone\", \"ngModel\"], [\"type\", \"password\", \"name\", \"pwd\", \"placeholder\", \"pwd\", 3, \"ngModel\", \"ngModelChange\"], [\"pass\", \"ngModel\"]],\n    template: function FormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"forms works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"pre\");\n        i0.ɵɵtext(3, \"    \");\n        i0.ɵɵelementStart(4, \"form\", 0, 1);\n        i0.ɵɵtext(6, \"\\n        \");\n        i0.ɵɵelementStart(7, \"input\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function FormsComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.fname = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9);\n        i0.ɵɵelementStart(10, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function FormsComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.lname = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \"\\n        \\n        \");\n        i0.ɵɵelementStart(13, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function FormsComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.contact = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \"\\n        \");\n        i0.ɵɵelementStart(16, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function FormsComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.pwd = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementStart(19, \"button\");\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21, \"\\n\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n\n        const _r1 = i0.ɵɵreference(8);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.fname);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.fname, \"\\n        \\n        \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.lname);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.pwd);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pwd, \"\\n\\n        \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolateV([\"\\n\\n    ##########feild states##########\\n    valid :: \", _r1.valid, \"\\n    invalid :: \", _r1.invalid, \"\\n    dirty :: \", _r1.dirty, \"\\n    pristine :: \", _r1.pristine, \"\\n    touched :: \", _r1.touched, \"\\n    untouched :: \", _r1.untouched, \"\\n    required Error :: \", _r1.hasError(\"required\"), \"\\n    minlength Error:: \", _r1.hasError(\"minlength\"), \"\\n\\n    ##########Form States##########\\n    valid :: \", _r0.valid, \"\\n    invalid :: \", _r0.invalid, \"\\n    dirty :: \", _r0.dirty, \"\\n    pristine :: \", _r0.pristine, \"\\n    touched :: \", _r0.touched, \"\\n    untouched :: \", _r0.untouched, \"\\n    submitted:: \", _r0.submitted, \"\\n\\n\"]);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.DefaultValueAccessor, i1.RequiredValidator, i1.MinLengthValidator, i1.NgControlStatus, i1.NgModel],\n    styles: [\"\"]\n  });\n  return FormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}